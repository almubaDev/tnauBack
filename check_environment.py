#!/usr/bin/env python
"""
Script para verificar el entorno de Django activo.
Ejecutar con: python check_environment.py
"""

import os
import django
import sys

# Configurar el entorno
if os.environ.get('DJANGO_PRODUCTION') == 'True':
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings_production')
    print("ðŸŒŽ Usando configuraciÃ³n de PRODUCCIÃ“N (PythonAnywhere)")
else:
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
    print("ðŸ”§ Usando configuraciÃ³n de DESARROLLO (Local)")

# Inicializar Django
django.setup()

# Importar configuraciÃ³n
from django.conf import settings

# Mostrar informaciÃ³n relevante
print("\n=== InformaciÃ³n del Entorno ===")
print(f"â€¢ DEBUG: {'Activado' if settings.DEBUG else 'Desactivado'}")
print(f"â€¢ ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
print(f"â€¢ Database Engine: {settings.DATABASES['default']['ENGINE']}")
print(f"â€¢ Database Name: {settings.DATABASES['default']['NAME']}")
print(f"â€¢ Archivos estÃ¡ticos: {getattr(settings, 'STATIC_ROOT', 'No configurado')}")
print(f"â€¢ Ruta de logs: {settings.LOGGING['handlers']['file']['filename']}")
print("\n=== Variables de Entorno ===")
print(f"â€¢ DJANGO_PRODUCTION: {os.environ.get('DJANGO_PRODUCTION', 'No configurado')}")
print(f"â€¢ SECRET_KEY configurada: {'SÃ­' if settings.SECRET_KEY else 'No'}")
print(f"â€¢ ANTHROPIC_API_KEY configurada: {'SÃ­' if getattr(settings, 'ANTHROPIC_API_KEY', None) else 'No'}")

print("\nâœ“ VerificaciÃ³n completada.")
